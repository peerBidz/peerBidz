<!-- form to display the item fields while oferring an item for auction -->

<%= form_for @item, :html => { :multipart => true } do |f| %>
  <% if @item.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@item.errors.count, "error") %> prohibited this item from being saved:</h2>

      <ul>
      <% @item.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :title %><br />
    <%= f.text_field :title %>
  </div>
  <div class="field">
    <%= f.label :description %><br />
    <%= f.text_field :description %>
  </div>
  <div class="field">
    <%= f.label :condition %><br />
    <%= f.select :condition, [['New','1'] , ['Used', '0']]%>
  </div>

  <div class="field">
    <%= f.label :photo %><br />
    <%= f.file_field :photo %>

  </div>

  <div class="field">
    <%= f.label :starting_price %><br />
    <%= f.text_field :starting_price %>
  </div>

    <!-- div class="field">
    <%#= f.label "Main Category" %><br />
    <%#= f.select :category_id, Category.where(:parentID => nil).collect {|category| [ category.name, category.id ]} %>
  </div -->
  
  <div class="field">
    <%= f.label "Subcategory" %><br />
    <%= f.select :category_id, Category.where("parentID NOT ?", nil).collect {|category| [ category.name, category.id ]} %>
  </div>

  <%= f.hidden_field :seller_id, :value => current_user.id %>
  <!-- In case, when seller create an new item and want to see his item on the item list
       Since he hasn't assigned :biduser, it resulted "without ID error" since it provided only from buyer's bidding page.
       temporary assign current_user.id but it will be automatically overwrite when buyer tries to bid on an item-->
  <%= f.text_field :biduser, :value => current_user.id %>

  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>
